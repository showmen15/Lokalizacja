// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: hokuyo.proto

#ifndef PROTOBUF_hokuyo_2eproto__INCLUDED
#define PROTOBUF_hokuyo_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "drivermsg.pb.h"
// @@protoc_insertion_point(includes)

namespace amber {
namespace hokuyo_proto {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_hokuyo_2eproto();
void protobuf_AssignDesc_hokuyo_2eproto();
void protobuf_ShutdownFile_hokuyo_2eproto();

class Scan;

// ===================================================================

class Scan : public ::google::protobuf::Message {
 public:
  Scan();
  virtual ~Scan();
  
  Scan(const Scan& from);
  
  inline Scan& operator=(const Scan& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Scan& default_instance();
  
  void Swap(Scan* other);
  
  // implements Message ----------------------------------------------
  
  Scan* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Scan& from);
  void MergeFrom(const Scan& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated double angles = 1 [packed = true];
  inline int angles_size() const;
  inline void clear_angles();
  static const int kAnglesFieldNumber = 1;
  inline double angles(int index) const;
  inline void set_angles(int index, double value);
  inline void add_angles(double value);
  inline const ::google::protobuf::RepeatedField< double >&
      angles() const;
  inline ::google::protobuf::RepeatedField< double >*
      mutable_angles();
  
  // repeated int32 distances = 2 [packed = true];
  inline int distances_size() const;
  inline void clear_distances();
  static const int kDistancesFieldNumber = 2;
  inline ::google::protobuf::int32 distances(int index) const;
  inline void set_distances(int index, ::google::protobuf::int32 value);
  inline void add_distances(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      distances() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_distances();
  
  // @@protoc_insertion_point(class_scope:amber.hokuyo_proto.Scan)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< double > angles_;
  mutable int _angles_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > distances_;
  mutable int _distances_cached_byte_size_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_hokuyo_2eproto();
  friend void protobuf_AssignDesc_hokuyo_2eproto();
  friend void protobuf_ShutdownFile_hokuyo_2eproto();
  
  void InitAsDefaultInstance();
  static Scan* default_instance_;
};
// ===================================================================

static const int kGetSingleScanFieldNumber = 44;
extern ::google::protobuf::internal::ExtensionIdentifier< ::amber::DriverMsg,
    ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false >
  get_single_scan;
static const int kScanFieldNumber = 48;
extern ::google::protobuf::internal::ExtensionIdentifier< ::amber::DriverMsg,
    ::google::protobuf::internal::MessageTypeTraits< ::amber::hokuyo_proto::Scan >, 11, false >
  scan;

// ===================================================================

// Scan

// repeated double angles = 1 [packed = true];
inline int Scan::angles_size() const {
  return angles_.size();
}
inline void Scan::clear_angles() {
  angles_.Clear();
}
inline double Scan::angles(int index) const {
  return angles_.Get(index);
}
inline void Scan::set_angles(int index, double value) {
  angles_.Set(index, value);
}
inline void Scan::add_angles(double value) {
  angles_.Add(value);
}
inline const ::google::protobuf::RepeatedField< double >&
Scan::angles() const {
  return angles_;
}
inline ::google::protobuf::RepeatedField< double >*
Scan::mutable_angles() {
  return &angles_;
}

// repeated int32 distances = 2 [packed = true];
inline int Scan::distances_size() const {
  return distances_.size();
}
inline void Scan::clear_distances() {
  distances_.Clear();
}
inline ::google::protobuf::int32 Scan::distances(int index) const {
  return distances_.Get(index);
}
inline void Scan::set_distances(int index, ::google::protobuf::int32 value) {
  distances_.Set(index, value);
}
inline void Scan::add_distances(::google::protobuf::int32 value) {
  distances_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Scan::distances() const {
  return distances_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Scan::mutable_distances() {
  return &distances_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace hokuyo_proto
}  // namespace amber

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_hokuyo_2eproto__INCLUDED
